{
  "service": {
    "service": "aws-python-http-api-project",
    "serviceObject": {
      "name": "aws-python-http-api-project"
    },
    "provider": {
      "name": "aws",
      "runtime": "python3.8",
      "region": "ap-south-1",
      "profile": "default",
      "stage": "dev",
      "timeout": 10,
      "memorySize": 128,
      "environment": {
        "DYNAMODB_TABLE": "the-posts",
        "REGION_NAME": "ap-south-1"
      },
      "iam": {
        "role": {
          "statements": [
            {
              "Effect": "Allow",
              "Action": [
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem"
              ],
              "Resource": "arn:aws:dynamodb:ap-south-1:*:table/the-posts"
            }
          ]
        }
      },
      "versionFunctions": true,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "CreateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-http-api-project-dev-create"
            }
          },
          "GetLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-http-api-project-dev-get"
            }
          },
          "AllLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-http-api-project-dev-all"
            }
          },
          "UpdateLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-http-api-project-dev-update"
            }
          },
          "DeleteLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/aws-python-http-api-project-dev-delete"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "aws-python-http-api-project",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-python-http-api-project-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/aws-python-http-api-project-dev*:*:*"
                          }
                        ]
                      },
                      {
                        "$ref": "$[\"service\"][\"provider\"][\"iam\"][\"role\"][\"statements\"][0]"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "aws-python-http-api-project",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "CreateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python-http-api-project/dev/1649587045728-2022-04-10T10:37:25.728Z/aws-python-http-api-project.zip"
              },
              "Handler": "handler.create",
              "Runtime": "python3.8",
              "FunctionName": "aws-python-http-api-project-dev-create",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "the-posts",
                  "REGION_NAME": "ap-south-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "CreateLogGroup"
            ]
          },
          "GetLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python-http-api-project/dev/1649587045728-2022-04-10T10:37:25.728Z/aws-python-http-api-project.zip"
              },
              "Handler": "handler.get",
              "Runtime": "python3.8",
              "FunctionName": "aws-python-http-api-project-dev-get",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "the-posts",
                  "REGION_NAME": "ap-south-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "GetLogGroup"
            ]
          },
          "AllLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python-http-api-project/dev/1649587045728-2022-04-10T10:37:25.728Z/aws-python-http-api-project.zip"
              },
              "Handler": "handler.all",
              "Runtime": "python3.8",
              "FunctionName": "aws-python-http-api-project-dev-all",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "the-posts",
                  "REGION_NAME": "ap-south-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "AllLogGroup"
            ]
          },
          "UpdateLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python-http-api-project/dev/1649587045728-2022-04-10T10:37:25.728Z/aws-python-http-api-project.zip"
              },
              "Handler": "handler.update",
              "Runtime": "python3.8",
              "FunctionName": "aws-python-http-api-project-dev-update",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "the-posts",
                  "REGION_NAME": "ap-south-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "UpdateLogGroup"
            ]
          },
          "DeleteLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/aws-python-http-api-project/dev/1649587045728-2022-04-10T10:37:25.728Z/aws-python-http-api-project.zip"
              },
              "Handler": "handler.delete",
              "Runtime": "python3.8",
              "FunctionName": "aws-python-http-api-project-dev-delete",
              "MemorySize": 128,
              "Timeout": 10,
              "Environment": {
                "Variables": {
                  "DYNAMODB_TABLE": "the-posts",
                  "REGION_NAME": "ap-south-1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              }
            },
            "DependsOn": [
              "DeleteLogGroup"
            ]
          },
          "CreateLambdaVersionRmjQfUjdpjLlHiXvQrlh2q8GL93IlzCSiW250QQWRs": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "CreateLambdaFunction"
              },
              "CodeSha256": "m3PT3eA67s9WXu3MvKGXKldN8v3cq2EKfK5cVz0wQK8="
            }
          },
          "GetLambdaVersion58DJlONrHdIo2rc5rPzIhySELyopF9ethFz3GY5XGU": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetLambdaFunction"
              },
              "CodeSha256": "m3PT3eA67s9WXu3MvKGXKldN8v3cq2EKfK5cVz0wQK8="
            }
          },
          "AllLambdaVersion3aEXTxpX9ZdOp4YlC4AMgUXcHsH2SuW5czRFf1iFkc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "AllLambdaFunction"
              },
              "CodeSha256": "m3PT3eA67s9WXu3MvKGXKldN8v3cq2EKfK5cVz0wQK8="
            }
          },
          "UpdateLambdaVersionq1eVgKdy8FBDAVUgeseeT5t8X8oz2EwkeG0A9dBsc": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "UpdateLambdaFunction"
              },
              "CodeSha256": "m3PT3eA67s9WXu3MvKGXKldN8v3cq2EKfK5cVz0wQK8="
            }
          },
          "DeleteLambdaVersionYVcA3WLpMdMG9Blwfvj2JIOqCtrAz5Xn0xPtJY0cE": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "DeleteLambdaFunction"
              },
              "CodeSha256": "m3PT3eA67s9WXu3MvKGXKldN8v3cq2EKfK5cVz0wQK8="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-aws-python-http-api-project",
              "EndpointConfiguration": {
                "Types": [
                  "EDGE"
                ]
              },
              "Policy": ""
            }
          },
          "ApiGatewayResourcePosts": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "posts",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsCreate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "PathPart": "create",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsGet": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "PathPart": "get",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsGetPostidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePostsGet"
              },
              "PathPart": "{postId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsAll": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "PathPart": "all",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsUpdate": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "PathPart": "update",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsUpdatePostidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePostsUpdate"
              },
              "PathPart": "{postId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsDelete": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePosts"
              },
              "PathPart": "delete",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayResourcePostsDeletePostidVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Ref": "ApiGatewayResourcePostsDelete"
              },
              "PathPart": "{postId}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodPostsCreatePost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsCreate"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "CreateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "CreateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPostsGetPostidVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsGetPostidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "GetLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPostsAllGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsAll"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "AllLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "AllLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPostsUpdatePostidVarPut": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "PUT",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsUpdatePostidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "UpdateLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "UpdateLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayMethodPostsDeletePostidVarDelete": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "DELETE",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourcePostsDeletePostidVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "ApiKeyRequired": false,
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "DeleteLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            },
            "DependsOn": [
              "DeleteLambdaPermissionApiGateway"
            ]
          },
          "ApiGatewayDeployment1649587027855": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodPostsCreatePost",
              "ApiGatewayMethodPostsGetPostidVarGet",
              "ApiGatewayMethodPostsAllGet",
              "ApiGatewayMethodPostsUpdatePostidVarPut",
              "ApiGatewayMethodPostsDeletePostidVarDelete"
            ]
          },
          "CreateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "CreateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "AllLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "AllLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "UpdateLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "UpdateLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "DeleteLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "DeleteLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "postsTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "id",
                  "KeyType": "HASH"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "the-posts"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-aws-python-http-api-project-dev-ServerlessDeploymentBucketName"
            }
          },
          "CreateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "CreateLambdaVersionRmjQfUjdpjLlHiXvQrlh2q8GL93IlzCSiW250QQWRs"
            },
            "Export": {
              "Name": "sls-aws-python-http-api-project-dev-CreateLambdaFunctionQualifiedArn"
            }
          },
          "GetLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetLambdaVersion58DJlONrHdIo2rc5rPzIhySELyopF9ethFz3GY5XGU"
            },
            "Export": {
              "Name": "sls-aws-python-http-api-project-dev-GetLambdaFunctionQualifiedArn"
            }
          },
          "AllLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "AllLambdaVersion3aEXTxpX9ZdOp4YlC4AMgUXcHsH2SuW5czRFf1iFkc"
            },
            "Export": {
              "Name": "sls-aws-python-http-api-project-dev-AllLambdaFunctionQualifiedArn"
            }
          },
          "UpdateLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "UpdateLambdaVersionq1eVgKdy8FBDAVUgeseeT5t8X8oz2EwkeG0A9dBsc"
            },
            "Export": {
              "Name": "sls-aws-python-http-api-project-dev-UpdateLambdaFunctionQualifiedArn"
            }
          },
          "DeleteLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "DeleteLambdaVersionYVcA3WLpMdMG9Blwfvj2JIOqCtrAz5Xn0xPtJY0cE"
            },
            "Export": {
              "Name": "sls-aws-python-http-api-project-dev-DeleteLambdaFunctionQualifiedArn"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  },
                  "/dev"
                ]
              ]
            },
            "Export": {
              "Name": "sls-aws-python-http-api-project-dev-ServiceEndpoint"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "custom": {
      "dynamotable": "the-posts",
      "pythonRequirements": {
        "dockerizePip": "non-linux"
      }
    },
    "plugins": [
      "serverless-python-requirements"
    ],
    "pluginsData": {},
    "functions": {
      "create": {
        "handler": "handler.create",
        "events": [
          {
            "http": {
              "path": "posts/create",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-python-http-api-project-dev-create",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "CreateLambdaVersionRmjQfUjdpjLlHiXvQrlh2q8GL93IlzCSiW250QQWRs"
      },
      "get": {
        "handler": "handler.get",
        "events": [
          {
            "http": {
              "path": "posts/get/{postId}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-python-http-api-project-dev-get",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "GetLambdaVersion58DJlONrHdIo2rc5rPzIhySELyopF9ethFz3GY5XGU"
      },
      "all": {
        "handler": "handler.all",
        "events": [
          {
            "http": {
              "path": "posts/all",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-python-http-api-project-dev-all",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "AllLambdaVersion3aEXTxpX9ZdOp4YlC4AMgUXcHsH2SuW5czRFf1iFkc"
      },
      "update": {
        "handler": "handler.update",
        "events": [
          {
            "http": {
              "path": "posts/update/{postId}",
              "method": "put",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-python-http-api-project-dev-update",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "UpdateLambdaVersionq1eVgKdy8FBDAVUgeseeT5t8X8oz2EwkeG0A9dBsc"
      },
      "delete": {
        "handler": "handler.delete",
        "events": [
          {
            "http": {
              "path": "posts/delete/{postId}",
              "method": "delete",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "aws-python-http-api-project-dev-delete",
        "package": {},
        "memory": 128,
        "timeout": 10,
        "runtime": "python3.8",
        "vpc": {},
        "versionLogicalId": "DeleteLambdaVersionYVcA3WLpMdMG9Blwfvj2JIOqCtrAz5Xn0xPtJY0cE"
      }
    },
    "resources": {
      "Resources": {
        "postsTable": {
          "Type": "AWS::DynamoDB::Table",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "id",
                "KeyType": "HASH"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "the-posts"
          }
        }
      },
      "Outputs": {}
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "aws-python-http-api-project",
      "frameworkVersion": "3",
      "provider": {
        "$ref": "$[\"service\"][\"provider\"]"
      },
      "functions": {
        "$ref": "$[\"service\"][\"functions\"]"
      },
      "resources": {
        "$ref": "$[\"service\"][\"resources\"]"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "custom": {
        "$ref": "$[\"service\"][\"custom\"]"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\Users\\ritik\\Desktop\\awsserverless\\aws-python-flask-dynamodb-api-project\\.serverless\\aws-python-http-api-project.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/aws-python-http-api-project/dev/1649587045728-2022-04-10T10:37:25.728Z",
    "artifact": "aws-python-http-api-project.zip"
  }
}